{"version":3,"sources":["store/actions.js","helpers/gridFinder.js","helpers/gridGenerator.js","store/reducers.js","helpers/gridMove.js","components/Tile/Tile.js","components/Tiles/Tiles.js","components/UndoRedo/UndoRedo.js","components/App/App.js","index.js","store/localStorage.js"],"names":["doMove","from","type","payload","doNewGame","doReset","coordsCompare","one","two","findIndexByCoord","grid","coord","findIndex","item","gridGenerator","rMax","arguments","length","undefined","cMax","state","min","max","plain","Array","fill","map","_","i","r","c","push","value","splice","Math","floor","random","generateGrid","emptyCoord","find","initialState","Object","objectSpread","started","moves","generateGridState","startState","undoable","action","fromCoord","toCoord","res","row","col","filter","coords","isCoordPossibleToMove","getPossibleCoordsToMove","isEmptyCoordPossibleToMove","gridNew","slice","assign","fromPosition","toPosition","tmp","getMovedGrid","includeAction","Tile","_ref","position","onClick","react_default","a","createElement","className","style","top","left","Tiles","tiles","onTileClick","index","components_Tile_Tile","key","connect","canUndo","past","canRedo","future","dispatch","onUndo","bindActionCreators","UndoActionCreators","undo","onRedo","redo","disabled","App","_this$props","this","props","components_Tiles_Tiles","components_UndoRedo_UndoRedo","React","Component","present","persistedState","serializedState","localStorage","getItem","JSON","parse","e","loadState","store","createStore","rootReducer","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c36d5287.chunk.js","sourcesContent":["export const ACTION_MOVE = 'ACTION_MOVE';\nexport const ACTION_NEW_GAME = 'ACTION_NEW_GAME';\nexport const ACTION_RESET = 'ACTION_RESET';\n\nexport const doMove = (from) => {\n    return {\n        type: ACTION_MOVE,\n        payload: from\n    };\n};\n\nexport const doNewGame = () => {\n    return {\n        type: ACTION_NEW_GAME,\n        payload: null\n    };\n};\n\nexport const doReset = () => {\n    return {\n        type: ACTION_RESET,\n        payload: null\n    };\n};\n","export const coordsCompare = (one, two) => {\n    return one[0] === two[0]\n        && one[1] === two[1];\n};\n\nexport const isCoordPossibleToMove = (coord, rMax = 4, cMax = 4) => {\n    return coord[0] >= 0 && coord[0] < rMax\n        && coord[1] >= 0 && coord[1] < cMax;\n}\n\nexport const getPossibleCoordsToMove = (fromCoord) => {\n    let row = fromCoord[0];\n    let col = fromCoord[1];\n\n    return [\n        [row - 1, col],\n        [row + 1, col],\n        [row, col - 1],\n        [row, col + 1]\n    ].filter((coords) => isCoordPossibleToMove(coords));\n};\n\nexport const isEmptyCoordPossibleToMove = (fromCoord, emptyCoord) => {\n    let res = getPossibleCoordsToMove(fromCoord).filter(coord => coordsCompare(coord, emptyCoord));\n\n    return res && res[0] ? true : false;\n};\n\nexport const findIndexByCoord = (grid, coord) => {\n    return grid.findIndex(item => coordsCompare(item.coord, coord));\n};\n","export const generateGrid = (rMax = 4, cMax = 4) => {\n    let size = rMax * cMax;\n    let plain = (new Array(size)).fill(0).map((_, i) => i);\n\n    let grid = [];\n\n    for (let r = 0; r < rMax; r++) {\n        for (let c = 0; c < cMax; c++) {\n            grid.push({\n                coord: [r, c],\n                value: plain.splice(getRandomInt(0, plain.length), 1)[0]\n            });\n        }\n    }\n\n    return grid;\n};\n\nexport default (rMax = 4, cMax = 4) => {\n    let state = {};\n\n    state.grid = generateGrid(rMax, cMax);\n    state.emptyCoord = state.grid.find(item => !item.value).coord;\n\n    return state;\n};\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n","\nimport undoable, { includeAction } from 'redux-undo'\n\nimport { ACTION_MOVE, ACTION_NEW_GAME, ACTION_RESET} from './actions';\nimport { isEmptyCoordPossibleToMove } from './../helpers/gridFinder';\nimport { getMovedGrid } from './../helpers/gridMove';\nimport generateGridState from './../helpers/gridGenerator';\n\nconst baseState = {\n    started: false,\n    moves: 0\n};\n\nconst initialState = {\n    ...baseState,\n    ...generateGridState()\n};\n\nlet startState = {\n    ...initialState,\n    ...generateGridState()\n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_MOVE:\n            let fromCoord = action.payload;\n            let toCoord = state.grid.find(item => !item.value).coord;\n\n            let grid = isEmptyCoordPossibleToMove(fromCoord, toCoord) && getMovedGrid(state.grid, fromCoord, toCoord);\n\n            if (grid) {\n                return {\n                    ...state,\n                    started: true,\n                    moves: state.moves + 1,\n                    grid: grid\n                };\n            }\n\n            return {...state};\n\n        case ACTION_NEW_GAME:\n            startState = {\n                ...initialState,\n                ...generateGridState()\n            };\n\n            return startState;\n\n        case ACTION_RESET:\n            return {...startState};\n\n        default:\n            return state;\n    }\n};\n\nexport default undoable(rootReducer, {filter: includeAction([ACTION_MOVE, ACTION_NEW_GAME, ACTION_RESET])});\n","import { findIndexByCoord } from './gridFinder';\n\nexport const getMovedGrid = (grid, fromCoord, toCoord) => {\n    let gridNew = grid.slice(0).map(item => Object.assign({}, item));\n\n    let fromPosition = findIndexByCoord(gridNew, fromCoord);\n    let toPosition = findIndexByCoord(gridNew, toCoord);\n\n    if (fromPosition === -1 || toPosition === -1) {\n        return;\n    }\n\n    // swap coords\n    let tmp = gridNew[fromPosition].coord.slice(0);\n    gridNew[fromPosition].coord = gridNew[toPosition].coord.slice(0);\n    gridNew[toPosition].coord = tmp;\n\n    return gridNew;\n};\n","import React from 'react';\n\nimport './Tile.css';\n\nconst Tile = ({onClick, coord, value}) => {\n    const getStyle = (position) => {\n        return {\n            top: position[0] * 60 + 'px',\n            left: position[1] * 60 + 'px'\n        };\n    };\n\n    return (\n        <div\n            className={'tile ' + (!value ? 'tile--empty' : '')}\n            style={getStyle(coord)}\n            onClick={onClick}\n        >\n            <span className=\"tile__inner\">{value || ''}</span>\n        </div>\n    );\n};\n\nexport default Tile;\n","import React from 'react';\n\nimport Tile from './../Tile/Tile';\n\nimport './Tiles.css';\n\nconst Tiles = ({tiles, onTileClick}) => {\n    return (\n        <div className=\"tiles\">\n            {tiles.map((item, index) => {\n                return (\n                    <Tile\n                        key={'item:' + index}\n                        {...item}\n                        onClick={() => onTileClick(item)}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Tiles;\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { ActionCreators as UndoActionCreators } from 'redux-undo'\nimport { connect } from 'react-redux'\n\nconst UndoRedo = ({canUndo, canRedo, onUndo, onRedo}) => (\n    <div>\n        <button onClick={onUndo} disabled={!canUndo}>Undo</button>\n        <button onClick={onRedo} disabled={!canRedo}>Redo</button>\n    </div>\n)\n\nconst mapStateToProps = (state) => ({\n    canUndo: state.past.length > 0,\n    canRedo: state.future.length > 0\n})\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        onUndo: bindActionCreators(UndoActionCreators.undo, dispatch),\n        onRedo: bindActionCreators(UndoActionCreators.redo, dispatch)\n    };\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(UndoRedo);\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { doMove, doNewGame, doReset } from './../../store/actions';\n\nimport Tiles from './../Tiles/Tiles';\nimport UndoRedo from './../UndoRedo/UndoRedo';\n\nimport './App.css';\n\nclass App extends React.Component {\n    render() {\n        const {tiles, moves, doMove, doNewGame, doReset} = this.props;\n\n        return (\n            <div className=\"app\">\n                <div>\n                <button onClick={() => {doNewGame()}}>New game</button> <button onClick={() => {doReset()}}>Reset</button>\n                </div>\n                Moves: {moves}\n                <div className=\"container\">\n                    <Tiles\n                        tiles={tiles}\n                        onTileClick={(item) => item.value && doMove(item.coord)}\n                    />\n                </div>\n                <UndoRedo/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    tiles: state.present.grid,\n    moves: state.present.moves\n});\n\nconst mapActionsToProps = (dispatch) => ({\n    doMove: bindActionCreators(doMove, dispatch),\n    doNewGame: bindActionCreators(doNewGame, dispatch),\n    doReset: bindActionCreators(doReset, dispatch)\n});\n\nexport default connect(mapStateToProps, mapActionsToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\n\nimport App from './components/App/App';\nimport { loadState, saveState, clearState } from './store/localStorage';\n\nimport './index.css';\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState);\n\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n)\n","const STORAGE_KEY = '15puzzle:state';\n\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem(STORAGE_KEY);\n        if (serializedState === null) {\n            return;\n        }\n\n        return JSON.parse(serializedState);\n    } catch (e) {\n        return;\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n\n        localStorage.setItem(STORAGE_KEY, serializedState);\n    } catch (e) {}\n};\n\nexport const clearState = () => {\n    try {\n        localStorage.removeItem(STORAGE_KEY);\n    } catch (e) {}\n};\n"],"sourceRoot":""}