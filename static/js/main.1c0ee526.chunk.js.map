{"version":3,"sources":["store/actions.js","helpers/gridFinder.js","helpers/gridGenerator.js","store/reducers.js","helpers/gridMove.js","components/Header/Header.js","components/Tile/Tile.js","components/Winner/Winner.js","components/Tiles/Tiles.js","components/UndoRedo/UndoRedo.js","components/App/App.js","index.js","store/localStorage.js"],"names":["doMove","from","type","payload","doNewGame","doReset","coordsCompare","one","two","isRightCoordPosition","coord","value","rMax","arguments","length","undefined","cMax","findIndexByCoord","grid","findIndex","item","gridGenerator","state","min","max","plain","Array","fill","map","_","i","r","c","splice","Math","floor","random","done","push","generateGrid","win","filter","emptyCoord","find","initialState","Object","objectSpread","started","moves","generateGridState","startState","undoable","action","fromCoord","toCoord","res","row","col","coords","isCoordPossibleToMove","getPossibleCoordsToMove","isEmptyCoordPossibleToMove","gridNew","slice","assign","fromPosition","toPosition","tmp","getMovedGrid","gridDone","includeAction","connect","present","dispatch","onNewGameClick","bindActionCreators","onResetClick","_ref","react_default","a","createElement","className","onClick","title","Tile","style","top","left","join","tiles","onTileClick","index","components_Tile_Tile","key","components_Winner_Winner","canUndo","past","canRedo","future","onUndo","UndoActionCreators","undo","onRedo","redo","disabled","App","components_Header_Header","components_Tiles_Tiles","components_UndoRedo_UndoRedo","React","Component","persistedState","serializedState","localStorage","getItem","JSON","parse","e","loadState","store","createStore","rootReducer","ActionCreators","clearHistory","subscribe","getState","removeItem","clearState","stringify","setItem","saveState","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1c0ee526.chunk.js","sourcesContent":["export const ACTION_MOVE = 'ACTION_MOVE';\nexport const ACTION_NEW_GAME = 'ACTION_NEW_GAME';\nexport const ACTION_RESET = 'ACTION_RESET';\n\nexport const doMove = (from) => {\n    return {\n        type: ACTION_MOVE,\n        payload: from\n    };\n};\n\nexport const doNewGame = () => {\n    return {\n        type: ACTION_NEW_GAME,\n        payload: null\n    };\n};\n\nexport const doReset = () => {\n    return {\n        type: ACTION_RESET,\n        payload: null\n    };\n};\n","export const coordsCompare = (one, two) => {\n    return one[0] === two[0]\n        && one[1] === two[1];\n};\n\nexport const isCoordPossibleToMove = (coord, rMax = 4, cMax = 4) => {\n    return coord[0] >= 0 && coord[0] < rMax\n        && coord[1] >= 0 && coord[1] < cMax;\n}\n\nexport const getPossibleCoordsToMove = (fromCoord) => {\n    let row = fromCoord[0];\n    let col = fromCoord[1];\n\n    return [\n        [row - 1, col],\n        [row + 1, col],\n        [row, col - 1],\n        [row, col + 1]\n    ].filter((coords) => isCoordPossibleToMove(coords));\n};\n\nexport const isEmptyCoordPossibleToMove = (fromCoord, emptyCoord) => {\n    let res = getPossibleCoordsToMove(fromCoord).filter(coord => coordsCompare(coord, emptyCoord));\n\n    return res && res[0] ? true : false;\n};\n\nexport const isRightCoordPosition = (coord, value, rMax = 4, cMax = 4) => {\n    if (!value) {\n        return coord[0] === rMax - 1 && coord[1] === cMax - 1;\n    }\n\n    return value === (coord[0] * cMax + coord[1] + 1);\n}\n\nexport const findIndexByCoord = (grid, coord) => {\n    return grid.findIndex(item => coordsCompare(item.coord, coord));\n};\n","import { isRightCoordPosition } from './gridFinder';\n\nexport const generateGrid = (rMax = 4, cMax = 4) => {\n    let size = rMax * cMax;\n    let plain = (new Array(size)).fill(0).map((_, i) => i);\n\n    let grid = [];\n\n    for (let r = 0; r < rMax; r++) {\n        for (let c = 0; c < cMax; c++) {\n            let item = {\n                coord: [r, c],\n                value: plain.splice(getRandomInt(0, plain.length), 1)[0],\n            };\n\n            item.done = isRightCoordPosition(item.coord, item.value);\n\n            grid.push(item);\n        }\n    }\n\n    return grid;\n};\n\nexport default (rMax = 4, cMax = 4) => {\n    let state = {};\n\n    state.grid = generateGrid(rMax, cMax);\n    state.win = state.grid.filter(item => item.done).length === state.grid.length;\n    state.emptyCoord = state.grid.find(item => !item.value).coord;\n\n    return state;\n};\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n","\nimport undoable, { includeAction } from 'redux-undo'\n\nimport { ACTION_MOVE, ACTION_NEW_GAME, ACTION_RESET } from './actions';\nimport { isEmptyCoordPossibleToMove, isRightCoordPosition } from './../helpers/gridFinder';\nimport { getMovedGrid } from './../helpers/gridMove';\nimport generateGridState from './../helpers/gridGenerator';\n\nconst baseState = {\n    started: false,\n    moves: 0\n};\n\nconst initialState = {\n    ...baseState,\n    ...generateGridState()\n};\n\nlet startState = {\n    ...initialState,\n    ...generateGridState()\n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_MOVE:\n            let fromCoord = action.payload;\n            let toCoord = state.grid.find(item => !item.value).coord;\n\n            let grid = isEmptyCoordPossibleToMove(fromCoord, toCoord) && getMovedGrid(state.grid, fromCoord, toCoord);\n\n            if (!grid) {\n                return state;\n            }\n\n            grid = grid.map(item => {\n                item.done = isRightCoordPosition(item.coord, item.value);\n\n                return item;\n            });\n\n            let gridDone = grid.filter(item => item.done);\n\n            return {\n                ...state,\n                started: true,\n                win: gridDone.length === grid.length,\n                moves: state.moves + 1,\n                grid: grid\n            };\n\n        case ACTION_NEW_GAME:\n            startState = {\n                ...initialState,\n                ...generateGridState()\n            };\n\n            return startState;\n\n        case ACTION_RESET:\n            return {...startState};\n\n        default:\n            return state;\n    }\n};\n\nexport default undoable(rootReducer, {filter: includeAction([ACTION_MOVE])});\n","import { findIndexByCoord } from './gridFinder';\n\nexport const getMovedGrid = (grid, fromCoord, toCoord) => {\n    let gridNew = grid.slice(0).map(item => Object.assign({}, item));\n\n    let fromPosition = findIndexByCoord(gridNew, fromCoord);\n    let toPosition = findIndexByCoord(gridNew, toCoord);\n\n    if (fromPosition === -1 || toPosition === -1) {\n        return;\n    }\n\n    // swap coords\n    let tmp = gridNew[fromPosition].coord.slice(0);\n    gridNew[fromPosition].coord = gridNew[toPosition].coord.slice(0);\n    gridNew[toPosition].coord = tmp;\n\n    return gridNew;\n};\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { doNewGame, doReset } from './../../store/actions';\n\nimport './Header.css';\n\nconst Header = ({onNewGameClick, onResetClick, moves}) => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"navbar-brand-wrapper\">\n                <span className=\"navbar-brand\">15 Puzzle</span>\n            </div>\n            <div>\n                <button\n                    className=\"btn btn-outline-light mx-1\"\n                    onClick={() => {onNewGameClick()}}\n                    title=\"New Game\"\n                >\n                    <i className=\"material-icons\">power_settings_new</i> <span className=\"d-none d-sm-inline\">New Game</span>\n                </button>\n                <button\n                    className=\"btn btn-outline-light mx-1\"\n                    onClick={() => {onResetClick()}}\n                    title=\"Reset Game\"\n                >\n                    <i className=\"material-icons\">clear</i> <span className=\"d-none d-sm-inline\">Reset Game</span>\n                </button>\n            </div>\n            <div className=\"mr-auto\"></div>\n            <span className=\"navbar-text\">\n                Moves: {moves}\n            </span>\n        </nav>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    moves: state.present.moves\n});\n\nconst mapActionsToProps = (dispatch) => ({\n    onNewGameClick: bindActionCreators(doNewGame, dispatch),\n    onResetClick: bindActionCreators(doReset, dispatch)\n});\n\nexport default connect(mapStateToProps, mapActionsToProps)(Header);\n","import React from 'react';\n\nimport './Tile.css';\n\nconst Tile = ({onClick, coord, value, done}) => {\n    let style = {\n        top: coord[0] * 25 + '%',\n        left: coord[1] * 25 + '%'\n    };\n\n    let className = ['tile', 'rounded'];\n    if (!value) {\n        className.push('tile--empty');\n    }\n    if (done) {\n        className.push('tile--done');\n    }\n\n    return (\n        <div\n            className={className.join(' ')}\n            style={style}\n            onClick={onClick}\n        >\n            <span className=\"tile__inner\">{value || ''}</span>\n        </div>\n    );\n};\n\nexport default Tile;\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport './Winner.css';\n\nconst Winner = ({win}) => {\n    if (!win) {\n        return null;\n    }\n\n    return (\n        <div className=\"winner-alert\">\n            <span>WIN!</span>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    win: state.present.win\n});\n\nexport default connect(mapStateToProps)(Winner);\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { doMove } from './../../store/actions';\n\nimport Tile from './../Tile/Tile';\nimport Winner from './../Winner/Winner';\n\nimport './Tiles.css';\n\nconst Tiles = ({tiles, onTileClick}) => {\n    return (\n        <div className=\"tiles-wrapper rounded\">\n            <div className=\"tiles\">\n                {tiles.map((item, index) => {\n                    return (\n                        <Tile\n                            key={'item:' + index}\n                            {...item}\n                            onClick={() => item.value && onTileClick(item.coord)}\n                        />\n                    );\n                })}\n            </div>\n            <Winner/>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    tiles: state.present.grid\n});\n\nconst mapActionsToProps = (dispatch) => ({\n    onTileClick: bindActionCreators(doMove, dispatch)\n});\n\nexport default connect(mapStateToProps, mapActionsToProps)(Tiles);\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { ActionCreators as UndoActionCreators } from 'redux-undo'\nimport { connect } from 'react-redux'\n\nconst UndoRedo = ({canUndo, canRedo, onUndo, onRedo, win}) => (\n    <div className=\"p-3\">\n        <button className=\"btn btn-outline-dark mx-1\" onClick={onUndo} disabled={!canUndo || win} title=\"Undo\">\n            <i className=\"material-icons\">undo</i> Undo\n        </button>\n        <button className=\"btn btn-outline-dark mx-1\" onClick={onRedo} disabled={!canRedo || win} title=\"Redo\">\n            <i className=\"material-icons\">redo</i> Redo\n        </button>\n    </div>\n)\n\nconst mapStateToProps = (state) => ({\n    canUndo: state.past.length > 0,\n    canRedo: state.future.length > 0,\n    win: state.present.win\n})\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        onUndo: bindActionCreators(UndoActionCreators.undo, dispatch),\n        onRedo: bindActionCreators(UndoActionCreators.redo, dispatch)\n    };\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(UndoRedo);\n","import React from 'react';\n\nimport Header from '../Header/Header';\nimport Tiles from './../Tiles/Tiles';\nimport UndoRedo from './../UndoRedo/UndoRedo';\n\nimport './App.css';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <Header/>\n                <div className=\"container\">\n                    <Tiles/>\n                    <UndoRedo/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { ActionCreators } from 'redux-undo'\nimport rootReducer from './store/reducers';\n\nimport App from './components/App/App';\nimport { loadState, saveState, clearState } from './store/localStorage';\n\nimport './index.css';\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState);\n\n// clear history at begin\nstore.dispatch(ActionCreators.clearHistory());\n\nstore.subscribe(() => {\n    const state = store.getState();\n\n    if (state.present.win || !state.present.started) {\n        clearState();\n    } else {\n        saveState(state);\n    }\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n)\n","const STORAGE_KEY = '15puzzle:state';\n\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem(STORAGE_KEY);\n        if (serializedState === null) {\n            return;\n        }\n\n        return JSON.parse(serializedState);\n    } catch (e) {\n        return;\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n\n        localStorage.setItem(STORAGE_KEY, serializedState);\n    } catch (e) {}\n};\n\nexport const clearState = () => {\n    try {\n        localStorage.removeItem(STORAGE_KEY);\n    } catch (e) {}\n};\n"],"sourceRoot":""}