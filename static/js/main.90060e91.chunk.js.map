{"version":3,"sources":["store/actions.js","store/reducers.js","components/App/App.js","index.js"],"names":["doMove","from","type","payload","doReset","doTick","initialState","grid","time","moves","getRandomInt","min","max","Math","floor","random","emptyPosition","counter","r","row","c","length","push","App","_this","this","timer","setInterval","props","clearInterval","_this$props","react_default","a","createElement","className","onClick","map","cols","key","value","col","React","Component","connect","state","dispatch","bindActionCreators","store","createStore","arguments","undefined","Object","objectSpread","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"wOAIaA,EAAS,SAACC,GACnB,MAAO,CACHC,KANmB,cAOnBC,QAASF,IAIJG,EAAU,WACnB,MAAO,CACHF,KAXoB,cAYpBC,QAAS,OAIJE,EAAS,WAClB,MAAO,CACHH,KAnBmB,cAoBnBC,QAAS,OCnBXG,EAAe,CACjBC,KAAM,GACNC,KAAM,EACNC,MAAO,GAGX,SAASC,EAAaC,EAAKC,GACvB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAQA,EAMrD,IAHA,IAAIK,EAAgB,CAACN,EAAa,EAAG,GAAIA,EAAa,EAAG,IAErDO,EAAU,EACLC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExB,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAI,EAAGA,IACfJ,EAAcK,QAAUL,EAAc,KAAOE,GAAKF,EAAc,KAAOI,GACvEJ,EAAgB,GAEhBG,EAAIG,KAAK,IAKbH,EAAIG,KAAKL,KAGbX,EAAaC,KAAKe,KAAKH,GAGpB,4CCxBDI,qMACkB,IAAAC,EAAAC,KAChBA,KAAKC,MAAQC,YAAY,WACrBH,EAAKI,MAAMvB,UACZ,oDAIHwB,cAAcJ,KAAKC,wCAGd,IAAAI,EACwCL,KAAKG,MAA3CrB,EADFuB,EACEvB,KAAME,EADRqB,EACQrB,MAAOD,EADfsB,EACetB,KAAMR,EADrB8B,EACqB9B,OAAQI,EAD7B0B,EAC6B1B,QAElC,OACI2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WAAO/B,MAAxB,UAFR,UAIYK,EAJZ,WAI2BD,EACvBuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACV3B,EAAK6B,IAAI,SAACC,EAAMlB,GACb,OACIY,EAAAC,EAAAC,cAAA,OAAKK,IAAK,MAAQnB,EAAKe,UAAU,YAC5BG,EAAKD,IAAI,SAACG,EAAOC,GACd,OACIT,EAAAC,EAAAC,cAAA,OACIK,IAAK,MAAQE,EACbN,UAAW,cAAiBK,EAAoB,GAAZ,WACpCJ,QAAS,WACLI,GAASvC,EAAO,CAACmB,EAAKqB,MAGzBD,GAAS,kBAjCpCE,IAAMC,YA8DTC,cAhBS,SAACC,GACrB,MAAO,CACHrC,KAAMqC,EAAMrC,KACZE,MAAOmC,EAAMnC,MACbD,KAAMoC,EAAMpC,OAIM,SAACqC,GACvB,MAAO,CACH7C,OAAQ8C,YAAmB9C,EAAQ6C,GACnCzC,QAAS0C,YAAmB1C,EAASyC,GACrCxC,OAAQyC,YAAmBzC,EAAQwC,KAI5BF,CAA4CpB,GC3DrDwB,SAAQC,YFqBa,WAAkC,IAAjCJ,EAAiCK,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAzB3C,EAChC,QADyD2C,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,GAC1ChD,MACX,IDlCmB,cCmCf,OAAOiD,OAAAC,EAAA,EAAAD,CAAA,GAAIP,EAAX,CAAkBnC,MAAOmC,EAAMnC,MAAQ,IAC3C,IDlCoB,cCmChB,OAAOH,EACX,IDrCmB,cCsCf,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIP,EAAX,CAAkBpC,KAAMoC,EAAMpC,KAAO,IACzC,QACI,OAAOoC,ME5BnBS,IAASC,OACLvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAUR,MAAOA,GACbhB,EAAAC,EAAAC,cAACuB,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.90060e91.chunk.js","sourcesContent":["export const ACTION_MOVE = 'ACTION_MOVE';\nexport const ACTION_TICK = 'ACTION_TICK';\nexport const ACTION_RESET = 'ACTION_REST';\n\nexport const doMove = (from) => {\n    return {\n        type: ACTION_MOVE,\n        payload: from\n    };\n};\n\nexport const doReset = () => {\n    return {\n        type: ACTION_RESET,\n        payload: null\n    };\n};\n\nexport const doTick = () => {\n    return {\n        type: ACTION_TICK,\n        payload: null\n    };\n};\n","import { ACTION_MOVE, ACTION_RESET, ACTION_TICK } from './actions';\n\nconst initialState = {\n    grid: [],\n    time: 0,\n    moves: 0\n};\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\nlet emptyPosition = [getRandomInt(1, 5), getRandomInt(1, 5)];\n\nlet counter = 1;\nfor (let r = 1; r < 5; r++) {\n    let row = [];\n    for (let c = 1; c < 5; c++) {\n        if (emptyPosition.length && emptyPosition[0] === r && emptyPosition[1] === c) {\n            emptyPosition = [];\n\n            row.push(0);\n\n            continue;\n        }\n\n        row.push(counter++);\n    }\n\n    initialState.grid.push(row);\n}\n\nexport const rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_MOVE:\n            return {...state, moves: state.moves + 1};\n        case ACTION_RESET:\n            return initialState;\n        case ACTION_TICK:\n            return {...state, time: state.time + 1};\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { doMove, doReset, doTick } from './../../store/actions';\n\nimport './App.css';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.timer = setInterval(() => {\n            this.props.doTick();\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    render() {\n        const {grid, moves, time, doMove, doReset} = this.props;\n\n        return (\n            <div className=\"App\">\n                <div>\n                    <button onClick={() => {doReset()}}>Reset</button>\n                </div>\n                Moves: {moves}, time: {time}\n                <div className=\"grid\">\n                    {grid.map((cols, row) => {\n                        return (\n                            <div key={'row' + row} className=\"grid-row\">\n                                {cols.map((value, col) => {\n                                    return (\n                                        <div\n                                            key={'col' + col}\n                                            className={'grid-item ' + (!value ? 't-empty' : '')}\n                                            onClick={() => {\n                                                value && doMove([row, col]);\n                                            }}\n                                            >\n                                            {value || ''}\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst putStateToProps = (state) => {\n    return {\n        grid: state.grid,\n        moves: state.moves,\n        time: state.time\n    };\n};\n\nconst putActionsToProps = (dispatch) => {\n    return {\n        doMove: bindActionCreators(doMove, dispatch),\n        doReset: bindActionCreators(doReset, dispatch),\n        doTick: bindActionCreators(doTick, dispatch)\n    };\n};\n\nexport default connect(putStateToProps, putActionsToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './store/reducers';\n\nimport App from './components/App/App';\n\nimport './index.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}