{"version":3,"sources":["store/actions.js","helpers/gridMove.js","helpers/gridGenerator.js","store/reducers.js","components/App/App.js","index.js"],"names":["doMove","from","type","payload","doNewGame","doReset","doTick","gridMove","grid","to","gridNew","slice","map","row","_from","Object","slicedToArray","rowFrom","colFrom","_to","rowTo","colTo","tmp","coord","gridGenerator","state","emptyCoord","getRandomInt","plain","Array","fill","_","i","isEmpty","r","c","value","splice","length","generateGrid","min","max","Math","floor","random","initialState","objectSpread","started","time","moves","generateGridState","App","_this","this","timer","setInterval","props","clearInterval","_this$props","react_default","a","createElement","className","onClick","cols","item","col","key","style","position","top","left","React","Component","connect","dispatch","bindActionCreators","store","createStore","arguments","undefined","action","fromCoord","toCoord","console","log","getMoved","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.41d9fe72.chunk.js","sourcesContent":["export const ACTION_MOVE = 'ACTION_MOVE';\nexport const ACTION_TICK = 'ACTION_TICK';\nexport const ACTION_NEW_GAME = 'ACTION_NEW_GAME';\nexport const ACTION_RESET = 'ACTION_RESET';\n\nexport const doMove = (from) => {\n    return {\n        type: ACTION_MOVE,\n        payload: from\n    };\n};\n\nexport const doNewGame = () => {\n    return {\n        type: ACTION_NEW_GAME,\n        payload: null\n    };\n};\n\nexport const doReset = () => {\n    return {\n        type: ACTION_RESET,\n        payload: null\n    };\n};\n\nexport const doTick = () => {\n    return {\n        type: ACTION_TICK,\n        payload: null\n    };\n};\n","export default (grid, from, to) => {\n    let gridNew = grid.slice().map(row => row.slice())\n\n    let [rowFrom, colFrom] = from;\n    let [rowTo, colTo] = to;\n\n    let tmp = gridNew[rowFrom][colFrom].coord;\n    gridNew[rowFrom][colFrom].coord = gridNew[rowTo][colTo].coord;\n    gridNew[rowTo][colTo].coord = tmp;\n\n    return gridNew;\n};\n","export const generateEmptyCoords = () => {\n    return [getRandomInt(0, 4), getRandomInt(0, 4)];\n};\n\nexport const generateGrid = (emptyCoord) => {\n    let plain = (new Array(15)).fill(0).map((_, i) => i + 1);\n    let grid = [];\n\n    let isEmpty = false;\n\n    for (let r = 0; r < 4; r++) {\n        grid[r] = [];\n\n        for (let c = 0; c < 4; c++) {\n            grid[r][c] = {\n                coord: [r, c],\n                value: 0\n            };\n\n            if (!isEmpty && emptyCoord[0] === r && emptyCoord[1] === c) {\n                isEmpty = true;\n\n                continue;\n            }\n\n            grid[r][c].value = plain.splice(getRandomInt(0, plain.length), 1);\n        }\n    }\n\n    return grid;\n};\n\nexport default () => {\n    let state = {};\n\n    state.emptyCoord = generateEmptyCoords();\n    state.grid = generateGrid(state.emptyCoord);\n\n    return state;\n};\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n","import { ACTION_MOVE, ACTION_NEW_GAME, ACTION_RESET, ACTION_TICK } from './actions';\nimport getMoved from './../helpers/gridMove';\nimport generateGridState from './../helpers/gridGenerator';\n\nconst initialState = {\n    started: false,\n    time: 0,\n    moves: 0,\n    ...generateGridState()\n};\n\nexport const rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_MOVE:\n            let fromCoord = action.payload;\n            let toCoord = state.emptyCoord;\n\n            console.log('empty coord: ', toCoord);\n\n            return {\n                ...state,\n                started: true,\n                grid: getMoved(state.grid, fromCoord, toCoord),\n                emptyCoord: fromCoord,\n                moves: state.moves + 1\n            };\n        case ACTION_NEW_GAME:\n            return {\n                ...initialState,\n                started: false,\n                ...generateGridState()\n            };\n        case ACTION_RESET:\n            return {...initialState};\n        case ACTION_TICK:\n            return {\n                ...state,\n                time: state.started && state.time + 1 || state.time\n            };\n        default:\n            return {...state};\n    }\n};\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { doMove, doNewGame, doReset, doTick } from './../../store/actions';\n\nimport './App.css';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.timer = setInterval(() => {\n            this.props.doTick();\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    render() {\n        const {grid, moves, time, doMove, doNewGame, doReset} = this.props;\n\n        const getStyle = (position) => {\n            return {\n                top: position[0] * 60 + 'px',\n                left: position[1] * 60 + 'px'\n            };\n        };\n\n        return (\n            <div className=\"app\">\n                <div>\n                <button onClick={() => {doNewGame()}}>New game</button> <button onClick={() => {doReset()}}>Reset</button>\n                </div>\n                Moves: {moves}, time: {time}\n                <div className=\"container\">\n                    <div className=\"grid\">\n                        {grid.map((cols, row) => {\n                            return cols.map((item, col) => {\n                                return (\n                                    <div\n                                        key={'item:' + row + ':'+ col}\n                                        className={'grid-item ' + (!item.value ? 'grid-item--empty' : '')}\n                                        style={getStyle(item.coord)}\n                                        onClick={() => {\n                                            item.value && doMove(item.coord);\n                                        }}\n                                        >\n                                        <span className=\"grid-item__inner\">{item.value || ''}</span>\n                                    </div>\n                                );\n                            });\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst putStateToProps = (state) => {\n    return {\n        grid: state.grid,\n        moves: state.moves,\n        time: state.time\n    };\n};\n\nconst putActionsToProps = (dispatch) => {\n    return {\n        doMove: bindActionCreators(doMove, dispatch),\n        doNewGame: bindActionCreators(doNewGame, dispatch),\n        doReset: bindActionCreators(doReset, dispatch),\n        doTick: bindActionCreators(doTick, dispatch)\n    };\n};\n\nexport default connect(putStateToProps, putActionsToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './store/reducers';\n\nimport App from './components/App/App';\n\nimport './index.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}