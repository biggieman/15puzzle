{"version":3,"sources":["store/actions.js","helpers/gridFinder.js","helpers/gridMove.js","helpers/gridGenerator.js","store/reducers.js","components/App/App.js","index.js"],"names":["doMove","from","type","payload","doNewGame","doReset","coordsCompare","one","two","isEmptyCoordPossibleToMove","fromCoord","emptyCoord","res","row","col","filter","isCoordPossibleToMove","getPossibleCoordsToMove","coord","findByCoord","grid","position","forEach","cols","item","getMovedGrid","toCoord","gridNew","JSON","parse","stringify","fromPosition","toPosition","_fromPosition","Object","slicedToArray","rowFrom","colFrom","_toPosition","rowTo","colTo","tmp","slice","gridGenerator","state","getRandomInt","plain","Array","fill","map","_","i","isEmptyExists","r","c","value","splice","length","generateGrid","min","max","Math","floor","random","initialState","started","moves","startState","objectSpread","generateGridState","App","_this$props","this","props","react_default","a","createElement","className","onClick","key","style","top","left","React","Component","connect","dispatch","bindActionCreators","store","createStore","arguments","undefined","action","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.3fb747af.chunk.js","sourcesContent":["export const ACTION_MOVE = 'ACTION_MOVE';\nexport const ACTION_NEW_GAME = 'ACTION_NEW_GAME';\nexport const ACTION_RESET = 'ACTION_RESET';\n\nexport const doMove = (from) => {\n    return {\n        type: ACTION_MOVE,\n        payload: from\n    };\n};\n\nexport const doNewGame = () => {\n    return {\n        type: ACTION_NEW_GAME,\n        payload: null\n    };\n};\n\nexport const doReset = () => {\n    return {\n        type: ACTION_RESET,\n        payload: null\n    };\n};\n","export const coordsCompare = (one, two) => {\n    return one[0] === two[0]\n        && one[1] === two[1];\n};\n\nexport const getPossibleCoordsToMove = (fromCoord) => {\n    let row = fromCoord[0];\n    let col = fromCoord[1];\n\n    return [\n        [row - 1, col],\n        [row + 1, col],\n        [row, col - 1],\n        [row, col + 1]\n    ].filter(isCoordPossibleToMove);\n};\n\nexport const isEmptyCoordPossibleToMove = (fromCoord, emptyCoord) => {\n    let res = getPossibleCoordsToMove(fromCoord).filter(coord => coordsCompare(coord, emptyCoord));\n\n    return res && res[0] ? res[0] : null;\n};\n\nexport const findByCoord = (grid, coord) => {\n    let position = null;\n\n    grid.forEach((cols, row) => {\n        cols.forEach((item, col) => {\n            if (coordsCompare(coord, item.coord)) {\n                position = [row, col];\n            }\n        });\n    });\n\n    return position;\n};\n\nfunction isCoordPossibleToMove(coord) {\n    return coord[0] >= 0 && coord[0] < 4\n        && coord[1] >= 0 && coord[1] < 4;\n}\n","import { findByCoord } from './gridFinder';\n\nexport const getMovedGrid = (grid, fromCoord, toCoord) => {\n    // clone grid\n    var gridNew = JSON.parse(JSON.stringify(grid));\n\n    let fromPosition = findByCoord(gridNew, fromCoord);\n    let toPosition = findByCoord(gridNew, toCoord);\n\n    // swap\n    if (fromPosition && toPosition) {\n        let [rowFrom, colFrom] = fromPosition;\n        let [rowTo, colTo] = toPosition;\n\n        let tmp = gridNew[rowFrom][colFrom].coord.slice(0);\n        gridNew[rowFrom][colFrom].coord = gridNew[rowTo][colTo].coord.slice(0);\n        gridNew[rowTo][colTo].coord = tmp;\n    }\n\n    return gridNew;\n};\n","import { coordsCompare } from './gridFinder';\n\nexport const generateEmptyCoords = () => {\n    return [getRandomInt(0, 4), getRandomInt(0, 4)];\n};\n\nexport const generateGrid = (emptyCoord) => {\n    let plain = (new Array(15)).fill(0).map((_, i) => i + 1);\n    let grid = [];\n\n    let isEmptyExists = false;\n\n    for (let r = 0; r < 4; r++) {\n        grid[r] = [];\n\n        for (let c = 0; c < 4; c++) {\n            grid[r][c] = {\n                coord: [r, c],\n                value: 0\n            };\n\n            if (!isEmptyExists && coordsCompare([r, c], emptyCoord)) {\n                isEmptyExists = true;\n\n                continue;\n            }\n\n            // populating by random value\n            grid[r][c].value = plain.splice(getRandomInt(0, plain.length), 1);\n        }\n    }\n\n    return grid;\n};\n\nexport default () => {\n    let state = {};\n\n    state.emptyCoord = generateEmptyCoords();\n    state.grid = generateGrid(state.emptyCoord);\n\n    return state;\n};\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n","import { ACTION_MOVE, ACTION_NEW_GAME, ACTION_RESET} from './actions';\nimport { isEmptyCoordPossibleToMove } from './../helpers/gridFinder';\nimport { getMovedGrid } from './../helpers/gridMove';\nimport generateGridState from './../helpers/gridGenerator';\n\nconst initialState = {\n    started: false,\n    moves: 0\n};\n\nlet startState = {\n    ...initialState,\n    ...generateGridState()\n};\n\nexport const rootReducer = (state = startState, action) => {\n    switch (action.type) {\n        case ACTION_MOVE:\n            let fromCoord = action.payload;\n            let toCoord = state.emptyCoord;\n\n            if (isEmptyCoordPossibleToMove(fromCoord, toCoord)) {\n                return {\n                    ...state,\n                    started: true,\n                    grid: getMovedGrid(state.grid, fromCoord, toCoord),\n                    emptyCoord: fromCoord,\n                    moves: state.moves + 1\n                };\n            }\n\n            return {...state};\n\n        case ACTION_NEW_GAME:\n            startState = {\n                ...initialState,\n                started: false,\n                ...generateGridState()\n            };\n\n            return startState;\n        case ACTION_RESET:\n            return {...startState};\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { doMove, doNewGame, doReset } from './../../store/actions';\n\nimport './App.css';\n\nclass App extends React.Component {\n    render() {\n        const {grid, moves, doMove, doNewGame, doReset} = this.props;\n\n        const getStyle = (position) => {\n            return {\n                top: position[0] * 60 + 'px',\n                left: position[1] * 60 + 'px'\n            };\n        };\n\n        return (\n            <div className=\"app\">\n                <div>\n                <button onClick={() => {doNewGame()}}>New game</button> <button onClick={() => {doReset()}}>Reset</button>\n                </div>\n                Moves: {moves}\n                <div className=\"container\">\n                    <div className=\"grid\">\n                        {grid.map((cols, row) => {\n                            return cols.map((item, col) => {\n                                return (\n                                    <div\n                                        key={'item:' + row + ':'+ col}\n                                        className={'grid-item ' + (!item.value ? 'grid-item--empty' : '')}\n                                        style={getStyle(item.coord)}\n                                        onClick={() => {\n                                            item.value && doMove(item.coord);\n                                        }}\n                                        >\n                                        <span className=\"grid-item__inner\">{item.value || ''}</span>\n                                    </div>\n                                );\n                            });\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst putStateToProps = (state) => {\n    return {\n        grid: state.grid,\n        moves: state.moves\n    };\n};\n\nconst putActionsToProps = (dispatch) => {\n    return {\n        doMove: bindActionCreators(doMove, dispatch),\n        doNewGame: bindActionCreators(doNewGame, dispatch),\n        doReset: bindActionCreators(doReset, dispatch)\n    };\n};\n\nexport default connect(putStateToProps, putActionsToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './store/reducers';\n\nimport App from './components/App/App';\n\nimport './index.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}